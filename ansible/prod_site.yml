# Copyright (c) 2014 Kevin Bell. All rights reserved.
# See the file LICENSE.txt for copying permission.

---
- name: create an autoscaling group based on a launch configuration
  hosts: localhost
  connection: local
  gather_facts: False
  vars:
    role: gridviz-app-server
    keypair: aws-key-2
    instance_type: t1.micro
    group: ssh-http
    region: us-west-2
    azs: us-west-2a,us-west-2b,us-west-2c
    db_user: test_user
    db_pass: test_pass
    gridviz_root: /opt/gridviz
  tasks:
  - name: validate input
    fail: msg="The variable 'stack_name' must be specified as an extra var"
    when: stack_name is not defined
  - name: ensure rds istance exists
    rds:
      instance_name: test-db
      db_engine: MySQL
      command: create
      instance_type: db.t1.micro
      region: us-west-2
      username: "{{ db_user }}"
      password: "{{ db_pass }}"
      size: 5
      db_name: gridviz
      wait: yes
    register: rds_data
  - name: lookup ami id
    ec2_ami_search: distro=ubuntu region={{ region }} release=trusty
    register: ubuntu_image
  # Note that launch configs cannot be updated -- only created or deleted
  - name: ensure launch config exists
    ec2_lc:
      name: "{{ stack_name }}_lc"
      region: "{{ region }}"
      image_id: "{{ ubuntu_image.ami }}"
      key_name: "{{ keypair }}"
      security_groups: "{{ group }}"
      instance_type: "{{ instance_type }}"
      instance_profile_name: "{{ role }}"
      user_data: |
        #!/bin/bash
        apt-get install -y git python-setuptools python-dev
        git clone -b personal https://github.com/bellkev/ansible.git /opt/ansible
        (cd /opt/ansible && python setup.py install)
        git clone https://github.com/bellkev/gridviz.git {{ gridviz_root }}
        printf "[local]\nlocalhost\n" > /opt/local
        mkdir /etc/ansible
        printf "[defaults]\nlog_path = /var/log/ansible.log\n" \
          > /etc/ansible/ansible.cfg
        ansible-playbook {{ gridviz_root }}/ansible/bootstrap.yml -i /opt/local \
          -e "db_user={{ db_user }} db_pass={{ db_pass }} db_host={{ rds_data.instance.endpoint }} gridviz_root={{ gridviz_root }}"
  - name: ensure asg exists
    ec2_asg:
      name: "{{ stack_name }}_asg"
      launch_config_name: "{{ stack_name }}_lc"
      min_size: 1
      max_size: 1
      region: "{{ region }}"
      availability_zones: "{{ azs }}"
      state: present
