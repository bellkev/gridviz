# Copyright (c) 2014 Kevin Bell. All rights reserved.
# See the file LICENSE.txt for copying permission.

- name: gather facts based on ec2 metadata
  ec2_facts:
- name: determine all allowed host names
  set_fact:
    all_hostnames: >
      {{ hostvars[inventory_hostname]['ansible_ec2_public_hostname'] }},
      {{ hostvars[inventory_hostname]['ansible_ec2_local_ipv4'] }},
      {{ extra_hostnames | default('') }}
- name: determine django environment variables
  set_fact:
    django_env:
      ALLOWED_HOSTS: "{{ all_hostnames }}"
      DJANGO_SETTINGS_MODULE: "{{ django_settings }}"
      DB_USER: "{{ db_user }}"
      DB_PASS: "{{ db_pass }}"
      DB_HOST: "{{ db_host }}"
      DJANGO_SECRET_KEY: "{{ django_secret_key }}"
- name: ensure required packages installed
  apt: name={{ item }} state=present
  with_items:
    - git
    - python-pip
    - nodejs
    - npm
- name: ensure nodejs available as node
  file: src=/usr/bin/nodejs dest=/usr/bin/node state=link
- name: checkout repo
  git: repo=https://github.com/bellkev/gridviz.git dest=/opt/gridviz
- name: ensure pip packages installed
  pip:
    requirements: /opt/gridviz/requirements.txt
    extra_args: --find-links=http://gridviz-wheelhouse.s3-website-us-west-2.amazonaws.com
- name: ensure bower and grunt available
  npm: global=yes name={{ item }}
  with_items:
    - bower
    - grunt-cli
- name: ensure bower packages installed
  command: bower install --allow-root chdir=/opt/gridviz
- name: ensure npm packages installed
  command: npm install chdir=/opt/gridviz
- name: ensure less compiled
  command: grunt chdir=/opt/gridviz
- name: ensure database exists
  mysql_db:
    name: gridviz
    state: present
    login_host: "{{ db_host }}"
    login_user: "{{ db_user }}"
    login_password: "{{ db_pass }}"
- name: run django migrations and collectstatic
  django_manage: 
    app_path: /opt/gridviz/django
    command: "{{ item }}"
    settings: "{{ django_settings }}"
  environment: django_env
  with_items:
    - migrate
    - collectstatic
- name: ensure django fixtures in place
  template: src=users.json dest=/opt/users.json
- name: ensure django fixtures loaded
  django_manage: 
    app_path: /opt/gridviz/django
    command: loaddata
    settings: "{{ django_settings }}"
    fixtures: svg_data.json /opt/users.json
  environment: django_env
# This task needs to use template because ini_file can't handle uwsgi's duplicate keys
- name: ensure uwsgi config file in place
  template: src=uwsgi_dev.ini dest=/etc/uwsgi/
- name: ensure nginx config file in place
  template: src=nginx_dev.conf dest=/etc/nginx/sites-available
- name: ensure nginx site enabled
  file: src=/etc/nginx/sites-available/nginx_dev.conf dest=/etc/nginx/sites-enabled/nginx_dev.conf state=link
- name: ensure services reloaded
  service: name={{ item }} state=reloaded
  with_items:
    - nginx
    - uwsgi
