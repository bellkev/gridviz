# Copyright (c) 2014 Kevin Bell. All rights reserved.
# See the file LICENSE.txt for copying permission.

---
- hosts: ec2-54-184-245-41.us-west-2.compute.amazonaws.com
  remote_user: ubuntu
  sudo: yes

  vars:
    gridviz_root: /opt/gridviz


  tasks:
  # MySQL
  - name: ensure mysql installed
    apt: name={{ item }} state=present
    with_items:
      - mysql-server
      - mysql-client
      - python-mysqldb
  - name: create database
    mysql_db: name=gridviz state=present
  # Nginx
  - name: ensure nginx installed
    apt: name=nginx state=present
  # uwsgi
  - name: ensure uwsgi installed
    apt: name={{ item }} state=present
    with_items:
      - uwsgi
      - uwsgi-plugin-python
  # redis
  - name: ensure redis installed
    apt: name=redis-server state=present
  # app
  - name: gather facts based on ec2 metadata
    ec2_facts:
  - name: create derived facts based on ec2 facts
    set_fact:
      gridviz_hostname:  "{{ hostvars[inventory_hostname]['ansible_ec2_public_hostname'] }}"
      django_env:
        GRIDVIZ_HOSTNAME: gridviz_hostname
        DJANGO_SETTINGS_MODULE: gridviz.settings.dev_uwsgi
  - name: ensure required packages installed
    apt: name={{ item }} state=present
    with_items:
      - git
      - python-pip
      - python-dev
      - nodejs
      - npm
  - name: ensure nodejs available as node
    file: src=/usr/bin/nodejs dest=/usr/bin/node state=link
  - name: checkout repo
    git: repo=https://github.com/bellkev/gridviz.git dest=/opt/gridviz
  - name: ensure pip packages installed
    pip: requirements=/opt/gridviz/requirements.txt
  - name: ensure bower and grunt available
    npm: global=yes name={{ item }}
    with_items:
      - bower
      - grunt-cli
  - name: ensure bower packages installed
    command: bower install --allow-root chdir=/opt/gridviz
  - name: ensure npm packages installed
    command: npm install chdir=/opt/gridviz
  - name: ensure less compiled
    command: grunt less chdir=/opt/gridviz
  - name: run django migrations and collectstatic
    django_manage: app_path=/opt/gridviz/django command={{ item }} settings=gridviz.settings.dev_uwsgi
    environment: django_env
    with_items:
      - migrate
      - collectstatic
  - name: ensure uwsgi config file in place
    copy: src=uwsgi_dev.ini dest=/etc/uwsgi/apps-available force=no
  - name: ensure uwsgi configs set
    ini_file: section=uwsgi dest=/etc/uwsgi/apps-available/uwsgi_dev.ini option=pythonpath value=/opt/gridviz/django
  # This task needs to use lineinfile because ini_file can't handle uwsgi's duplicate keys
  - name: ensure django environment applied to uwsgi settings
    lineinfile: dest=/etc/uwsgi/apps-available/uwsgi_dev.ini line="env = {{ item.key }}={{ item.value }}" state=present
    with_dict: django_env
  - name: ensure uwsgi app enabled
    file: src=/etc/uwsgi/apps-available/uwsgi_dev.ini dest=/etc/uwsgi/apps-enabled/uwsgi_dev.ini state=link
  - name: ensure nginx config file in place
    template: src=nginx_dev.conf dest=/etc/nginx/sites-available
  - name: ensure nginx site enabled
    file: src=/etc/nginx/sites-available/nginx_dev.conf dest=/etc/nginx/sites-enabled/nginx_dev.conf state=link
